{"version":3,"sources":["component/Header.js","context/AppReducer.js","context/GlobalState.js","component/Balance.js","component/IncomeExpense.js","component/Transaction.js","component/TransactionList.js","component/AddTransaction.js","App.js","index.js","swDev.js"],"names":["Header","state","action","type","transaction","filter","id","payload","initialState","text","amount","GlobalContext","createContext","GlobalProvider","children","useReducer","AppReducer","dispatch","Provider","value","transactions","deleteTransaction","AddNewTransaction","console","log","Balance","total","useContext","map","reduce","acc","item","toFixed","IncomeExpense","income","expense","className","Transaction","onClick","TransactionList","key","AddTransaction","useState","setText","setAmount","onSubmit","e","preventDefault","newTransaction","Math","floor","random","htmlFor","onChange","target","placeholder","App","ReactDOM","render","StrictMode","document","getElementById","swDev","process","navigator","serviceWorker","register","then","result","catch","err"],"mappings":"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","file":"static/js/main.ed34c0d1.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport const Header = () => {\r\n    return (\r\n        <div>\r\n            <h1>Expense Tracker</h1>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, {useReducer} from \"react\";\r\n\r\nexport default (state,action) => {\r\n    switch (action.type) {\r\n        case \"Delete_Transaction\": \r\n    return{ \r\n...state, transaction:state.transaction.filter(transaction => transaction.id !== action.payload)\r\n    }\r\n    case \"Add_Transaction\":\r\n        return{\r\n            ...state, transaction:[action.payload, ...state.transaction]\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}","import React, {createContext, useContext, useReducer} from \"react\";\r\nimport AppReducer from \"./AppReducer\";\r\n\r\nconst initialState={\r\n\r\n    transaction:[\r\n    \r\n          { id: 1, text: 'Flower', amount: 20 },\r\n          { id: 2, text: 'Salary', amount: 300 },\r\n          { id: 3, text: 'Book', amount: -10 },\r\n          { id: 4, text: 'Camera', amount: 150 }\r\n    ]\r\n\r\n}\r\n\r\n\r\nexport const GlobalContext =createContext(initialState);\r\n\r\nexport const GlobalProvider= ({children}) => {\r\n\r\n    const [state, dispatch] = useReducer(AppReducer, initialState);\r\n \r\n \r\n let deleteTransaction = (id)=>{\r\ndispatch(\r\n    {\r\n        type: \"Delete_Transaction\",\r\n        payload: id\r\n    }\r\n);\r\n }\r\n\r\n let AddNewTransaction = (transaction)=>{\r\n    dispatch(\r\n        {\r\n            type: \"Add_Transaction\",\r\n            payload: transaction\r\n        }\r\n    );\r\n    console.log(\"working \")\r\n     }\r\n    \r\n \r\n    return(\r\n        <GlobalContext.Provider value={\r\n\r\n            {\r\n                transactions: state.transaction,\r\n                deleteTransaction,\r\n                AddNewTransaction\r\n                \r\n            }\r\n\r\n        } >\r\n            {children}</GlobalContext.Provider>\r\n\r\n    );\r\n\r\n}","import React, {useContext} from 'react'\r\nimport {GlobalContext} from \"../context/GlobalState\";\r\nexport const Balance = () => {\r\n    const {transactions} = useContext(GlobalContext);\r\n\r\n    const amount = transactions.map((transaction)=> transaction.amount);\r\n    \r\n    const total = amount.reduce((acc, item) => (acc += item),0).toFixed(2);\r\n    \r\n   \r\n    return (\r\n        <>\r\n            <h4>Your Balance</h4>\r\n            <h1 >${total}</h1>\r\n\r\n        </>\r\n    )\r\n}\r\n","import React,{useContext} from 'react'\r\nimport {GlobalContext} from \"../context/GlobalState\";\r\n\r\nexport const IncomeExpense = () => {\r\n    \r\n    const {transactions} = useContext(GlobalContext);\r\n  const amount = transactions.map((transaction)=> transaction.amount);\r\n  \r\n  const income=amount.filter(item => item > 0)\r\n  .reduce((acc,item) => (acc+= item),0)\r\n  .toFixed(2); \r\n\r\n  const expense=(amount.filter(item => item < 0)\r\n  .reduce((acc,item) => (acc+= item),0)* -1)\r\n  .toFixed(2); \r\n\r\n    \r\n    return (\r\n        <div className=\"inc-exp-container\">\r\n    <div>\r\n<h4>Income</h4>\r\n    <p  className=\"money plus\">+${income}</p>\r\n    </div>\r\n\r\n    <div>\r\n        <h4>Expense</h4>\r\n    <p  className=\"money minus\">-${expense}</p>\r\n    </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n","import React, {useContext} from 'react'\r\nimport {GlobalContet, GlobalContext} from \"../context/GlobalState\";\r\n\r\nexport const Transaction = ({transaction}) => {\r\nconst {deleteTransaction} = useContext(GlobalContext);\r\n\r\n    return (\r\n        <li className={transaction.amount < 0 ? \"minus\" : \"plus\"}>\r\n        {transaction.text} <span>{transaction.amount}</span>\r\n        <button onClick={()=> deleteTransaction(transaction.id)} className=\"delete-btn\">X</button>\r\n             </li>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n    ","import React, {useContext} from 'react'\r\nimport {Transaction} from \"./Transaction\";\r\nimport {GlobalContext} from \"../context/GlobalState\";\r\n \r\nexport const TransactionList = () => {\r\n    const {transactions} = useContext(GlobalContext); \r\n    // console.log(\"value \"+transactions);\r\n    return (\r\n        <div>\r\n          <h3>History</h3>\r\n          <ul  className=\"list\">\r\n         {transactions.map((transaction)=>(\r\n         <Transaction key={transaction.id} transaction={transaction} />\r\n   \r\n\r\n         )\r\n         )\r\n        }\r\n         \r\n\r\n              </ul>  \r\n        </div>\r\n    )\r\n}\r\n","import React, {useState, useContext} from 'react'\r\nimport {GlobalContect, GlobalContext} from \"../context/GlobalState\";\r\n\r\nexport const AddTransaction = () => {\r\n    const [text, setText]=useState(\"\");\r\n    const [amount, setAmount]=useState(0);\r\n    const {AddNewTransaction } = useContext(GlobalContext);\r\nconst onSubmit=e =>{\r\n    e.preventDefault();\r\n\r\n    const newTransaction ={\r\n        id: Math.floor(Math.random()*100000000),\r\n        text,\r\n        amount: +amount\r\n    }\r\n    AddNewTransaction(newTransaction);\r\n    \r\n}\r\n\r\n    return (\r\n        <>\r\n          <h3>Add New Transaction</h3>\r\n        <form onSubmit={onSubmit}>\r\n        <div className=\"form-control\">\r\n\r\n<label htmlFor=\"text\">Text</label>\r\n<input type=\"text\"  value={text} onChange={(e)=>setText(e.target.value)} placeholder=\"Enter text...\"/>\r\n        </div>\r\n\r\n        <div className=\"form-contral\">\r\n        <label htmlFor=\"amount\">Amount <br/>(negative - expense, positive - income) </label>\r\n        <input type=\"number\"  value={amount} onChange={(e)=>setAmount(e.target.value)} placeholder=\"Enter Amount...\"/>\r\n        </div>\r\n        <button className=\"btn\">Add Transaction</button>\r\n\r\n        </form>\r\n\r\n\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport './App.css';\nimport {Header} from \"./component/Header\";\nimport {Balance} from \"./component/Balance\";\nimport {IncomeExpense} from \"./component/IncomeExpense\";\nimport {TransactionList} from \"./component/TransactionList\";\nimport {AddTransaction} from \"./component/AddTransaction\";\nimport {GlobalProvider} from \"./context/GlobalState\";\n\nfunction App() {\n  return (\n    <GlobalProvider >  \n   <Header />\n  <div className=\"container\">\n    <Balance />\n    <IncomeExpense />\n    <TransactionList />\n    <AddTransaction />\n\n  </div>\n\n    </GlobalProvider>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import * as serviceWorker from './serviceWorker';\nimport serviceWorker from './swDev';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker()\n","\r\n     export default function swDev() {\r\n\r\n        let swDev=`${process.env.PUBLIC_URL}/sw.js`\r\n\r\n      navigator.serviceWorker.register(swDev).then(result => {\r\n        console.log('Result: ', result);\r\n      }).catch(err=>{\r\n          console.log('err ',err)\r\n      })\r\n    \r\n    }\r\n"],"sourceRoot":""}